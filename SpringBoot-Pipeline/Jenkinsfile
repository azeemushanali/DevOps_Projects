pipeline {
    agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
    environment {
        // Define any environment variables needed for the build/test/deployment steps
        // For example:
        JAVA_HOME = '/path/to/your/java/home'
        // MAVEN_HOME = '/path/to/your/maven/home'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from your version control system (e.g., Git)
                // For example:
                // git url: 'https://github.com/yourusername/your-repo.git', branch: 'main'
                echo 'Pipeline executed successfully!'
            }
        }

        stage('Build') {
            steps {
                // Build your Maven project
                // For example:
                // sh 'mvn clean package'
                echo 'Pipeline executed successfully!'
            }
        }

        stage('Test') {
            steps {
                // Run your tests
                // For example:
                // sh 'mvn test'
                echo 'Pipeline executed successfully!'
            }
        }

        stage('Deploy') {
            steps {
                // Deploy your application to a server or container
                // For example:
                // sh 'mvn deploy'
                echo 'Pipeline executed successfully!'
            }
        }
    }

    post {
        always {
            // This block is executed no matter if the pipeline succeeds or fails
            // For example, you can clean up temporary files here
            echo 'Pipeline executed successfully!'
        }

        success {
            // This block is executed only if the pipeline succeeds
            // For example, you can trigger notifications or deployments here
            echo 'Pipeline executed successfully!'
        }

        failure {
            // This block is executed only if the pipeline fails
            // For example, you can send failure notifications here
            echo 'Pipeline executed successfully!'
        }
    }
}
